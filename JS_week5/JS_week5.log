1>> document.write("   ") 跳转到一个新的页面
2>> 外部脚本不能包含 <script> 标签
3>> onchange HTML 元素改变
4>> onclick  点击html元素
5>> onmouseover 鼠标悬停在指定元素
6>> onmouseout 鼠标从某元素移开
7>> onkeydown 用户按下键盘按键
8>> onload 浏览器已完成页面加载
9>> charAt(num:) 返回字符串指定索引的字符
10>> charCodeAt(num:) 返回字符串指定索引的字符的编码
11>> var n=str1.concat(str2); 连接两个或多个字符串并返回新字符串
12>> str.endsWith("string"); 判断str字符串是否以string结尾
13>> string.fromCharCode(num:);将 Unicode 编码转为一个字符:
14>> str.indexOf("string") indexOf() 方法可返回某个指定的字符串值在字符串中首次出现的位置,如果没有找到匹配的字符串则返回 -1。
     str2.indexOf("string2",num:);返回某个指定的字符串值在字符串中第num次出现的位置
15>> str1.includes("str2"):布尔值，返回str1中是否出现str2.
16>> str.lastIndexOf("string"); 返回某个指定的字符串值在字符串中最后一次出现的位置
17>> === 绝对相等，类型和值均相等下
18>> Regexp 修饰符
     i - 修饰符是用来执行不区分大小写的匹配。
     g - 修饰符是用于执行全文的搜索（而不是在找到第一个就停止查找,而是找到所有的匹配）。
19>> match(/str/gi) 寻找一个或多个正则表达式，并返回一个数组
20>> str.repeat(num:)repeat num 次并返回
21>> replace( , )替换第一个字符串
     replaceALL( , )替换所有指定字符串
22>> 查找指定字符串，并返回索引位置
23>> str.slice(num0:,numN:);返回某索引范围内的字符串切片
24>> str.split("  ");将字符串以" "为界限分割为数组
25>> str.startWith("strings","num: ");检测num索引字符串是否以strings开始
26>> str.substr(start: ,length: )返回下标从num1开始，长度为num2的字符串
27>> str.substring 提取字符串中介于两个指定下标之间的字符。
                   substring() 方法返回的子串包括 开始 处的字符，但不包括 结束 处的字符
28>> str.trim() 除去字符串两端空格
29>> str.toLocaleLowerCase() 根据本地主机的语言环境把字符串转换为小写
30>> str.toLocaleUpperCase() 根据本地主机的语言环境把字符串转换为大写
31>> str.valueOf() 返回 String 对象的原始值
32>> toString 返回一个字符串